version: '3'

services:
  pg-shop:
    container_name: postgres-shop
    image: postgres:17-alpine
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: shop
    networks:
      - shop-network
  pg-payments:
    container_name: postgres-payments
    image: postgres:17-alpine
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: shop
    networks:
      - shop-network
  redis:
    container_name: redis-server
    image: redis:7.4-bookworm
    environment:
      REDIS_PASSWORD: redis
      REDIS_USER: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "$REDIS_PASSWORD", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true
  app:
    container_name: shop-app
    build:
      dockerfile: Dockerfile-app-app
      context: .
    ports:
      - "8080:8080"
    depends_on:
      - pg-shop
      - redis
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-shop/shop
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - shop-network
  payments-service:
    container_name: payments-service
    build:
      dockerfile: Dockerfile-payments
      context: .
    ports:
      - "8090:8090"
    depends_on:
      - pg-payments
    environment:
      SPRING_PROFILES_ACTIVE: prod
    networks:
      - shop-network
networks:
  shop-network:
    driver: bridge
